% SUBFUNCTION data segmentation
% -------------------------------------------------------------------------
function segmentation_laughter(file_path, desPath)
 % Load raw data
    data_in = load(file_path, '-mat');
    
    % Define filename and destination path
    [~, name, ~] = fileparts(file_path);
    desPathL = fullfile(desPath, '06_nirs_laughter', strcat(name, '.mat')); % Save in the 06_segmented folder within desPath
    
    % Triggers for children study:
    % 1 - Tangram alone
    % 2 - Tangram together
    % 3 - Tangram rest
    % 4 - video beginning
    % 5 - video end
    % 6 - interaction start
    % 7 - interaction end
    % 8 - castle knights start
    % 9 - castle knight end
    % 10 - general function end trigger, used for tangram end


    fprintf('time stamp laughter begins\n');
    evtLaughter = find(data_in.s(:, 4) > 0);
    fprintf('evtInteraction: %d\n', evtLaughter);
    fprintf('time stamp laughter ends\n');
    evtLaughterEnd = find(data_in.s(:, 5) > 0);
    fprintf('evtInteractionEnd: %d\n', evtLaughterEnd);

    if size(evtLaughter,1)~=2 | size(evtLaughterEnd,1)~=2
        fprintf('Trial number is different than expected!\n');
        weirdtrials=1;
    else
        fprintf('Trial number is correct!\n');
        weirdtrials=0;
    end

     %cut out laughter data 

    if weirdtrials == 0
        tn = 0; %trial number counter
        for m = 1:length(evtLaughter)
            if evtLaughterEnd(m)-evtLaughter(m) < 2329 %5 min with 7.8 sampling rate = 2340 points. 2330 to be on the safe side
                fprintf('Too short trial!\n');
                weirdtrials=1;
            elseif evtLaughterEnd(m)-evtLaughter(m) > 2390 %left "spielraum" in case delays in triggers
                fprintf('Too long trial!\n');
                weirdtrials=1;
            else
                tn = tn + 1;
                data_out.y{tn} = data_in.y(evtLaughter(m):evtLaughterEnd(m),:); %hier data_in.d zu in.y ge√§ndert
                data_out.s{tn} = data_in.s(evtLaughter(m):evtLaughterEnd(m),:);
                data_out.t{tn} = data_in.t(evtLaughter(m):evtLaughterEnd(m),:);
                data_out.aux{tn} = data_in.aux(evtLaughter(m):evtLaughterEnd(m),:);
            end
        end
        data_out.SD = data_in.SD;
    end
end
    

    
  % Save cut data
if exist('data_out', 'var')
    fprintf('The Laughter data will be saved in %s ...\n', desPathL);
    save(desPathL, '-struct', 'data_out');
    fprintf('Data stored!\n\n');
else
    fprintf('Data was not segmented due to issues with laughter duration or trial numbers.\n');
end  % This closes the if-else block, not the function

% Clear data_out only if it exists
clear data_out

end  % This closes the function
